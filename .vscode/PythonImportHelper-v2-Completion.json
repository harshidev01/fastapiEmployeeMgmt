[
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "AddDepartmentRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteDepartmentRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteDesignationRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateDepartmentRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateDesignationRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "AddDepartmentRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteDepartmentRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteDesignationRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateDepartmentRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateDesignationRequestModel",
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "DepartmentServices",
        "importPath": "services.DepartmentServices",
        "description": "services.DepartmentServices",
        "isExtraImport": true,
        "detail": "services.DepartmentServices",
        "documentation": {}
    },
    {
        "label": "AddEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "FindEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "AddEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "FindEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "FindEmployeeRequestModel",
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "EmployeeServices",
        "importPath": "services.EmployeeServices",
        "description": "services.EmployeeServices",
        "isExtraImport": true,
        "detail": "services.EmployeeServices",
        "documentation": {}
    },
    {
        "label": "AddUserRequestModel",
        "importPath": "models.requestmodels.UserRequestModel",
        "description": "models.requestmodels.UserRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.UserRequestModel",
        "documentation": {}
    },
    {
        "label": "FindOneuserRequestModel",
        "importPath": "models.requestmodels.UserRequestModel",
        "description": "models.requestmodels.UserRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.UserRequestModel",
        "documentation": {}
    },
    {
        "label": "AddUserRequestModel",
        "importPath": "models.requestmodels.UserRequestModel",
        "description": "models.requestmodels.UserRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.UserRequestModel",
        "documentation": {}
    },
    {
        "label": "FindOneuserRequestModel",
        "importPath": "models.requestmodels.UserRequestModel",
        "description": "models.requestmodels.UserRequestModel",
        "isExtraImport": true,
        "detail": "models.requestmodels.UserRequestModel",
        "documentation": {}
    },
    {
        "label": "UserServices",
        "importPath": "services.UserServices",
        "description": "services.UserServices",
        "isExtraImport": true,
        "detail": "services.UserServices",
        "documentation": {}
    },
    {
        "label": "MongoClient",
        "importPath": "pymongo",
        "description": "pymongo",
        "isExtraImport": true,
        "detail": "pymongo",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "EmployeeMgmtDB",
        "importPath": "db.MongoDb",
        "description": "db.MongoDb",
        "isExtraImport": true,
        "detail": "db.MongoDb",
        "documentation": {}
    },
    {
        "label": "EmployeeMgmtDB",
        "importPath": "db.MongoDb",
        "description": "db.MongoDb",
        "isExtraImport": true,
        "detail": "db.MongoDb",
        "documentation": {}
    },
    {
        "label": "EmployeeMgmtDB",
        "importPath": "db.MongoDb",
        "description": "db.MongoDb",
        "isExtraImport": true,
        "detail": "db.MongoDb",
        "documentation": {}
    },
    {
        "label": "generateRandomId",
        "importPath": "utils.AppUtils",
        "description": "utils.AppUtils",
        "isExtraImport": true,
        "detail": "utils.AppUtils",
        "documentation": {}
    },
    {
        "label": "generateRandomId",
        "importPath": "utils.AppUtils",
        "description": "utils.AppUtils",
        "isExtraImport": true,
        "detail": "utils.AppUtils",
        "documentation": {}
    },
    {
        "label": "generateRandomId",
        "importPath": "utils.AppUtils",
        "description": "utils.AppUtils",
        "isExtraImport": true,
        "detail": "utils.AppUtils",
        "documentation": {}
    },
    {
        "label": "EmployeeDesingationEnum",
        "importPath": "models.dbmodels.EmployeeDBModel",
        "description": "models.dbmodels.EmployeeDBModel",
        "isExtraImport": true,
        "detail": "models.dbmodels.EmployeeDBModel",
        "documentation": {}
    },
    {
        "label": "EmployeeDbModel",
        "importPath": "models.dbmodels.EmployeeDBModel",
        "description": "models.dbmodels.EmployeeDBModel",
        "isExtraImport": true,
        "detail": "models.dbmodels.EmployeeDBModel",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "depRouter",
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "isExtraImport": true,
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "empRouter",
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "isExtraImport": true,
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "userRouter",
        "importPath": "controllers.UserController",
        "description": "controllers.UserController",
        "isExtraImport": true,
        "detail": "controllers.UserController",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "AddDepartment",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def AddDepartment(request:AddDepartmentRequestModel):\n    response=  depServices.AddDepartment(request)\n    return response\n@depRouter.post(\"/adddesignation\")\ndef AddDesignation(request:AddDepartmentRequestModel):\n    response = depServices.AddDesgination(request)\n    return response\n@depRouter.get(\"/alldepartments\")\ndef AllDepartments():\n    response = depServices.AllDepartments()",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "AddDesignation",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def AddDesignation(request:AddDepartmentRequestModel):\n    response = depServices.AddDesgination(request)\n    return response\n@depRouter.get(\"/alldepartments\")\ndef AllDepartments():\n    response = depServices.AllDepartments()\n    return response\n@depRouter.get(\"/alldesignations\")\ndef AllDesignations():\n    response = depServices.AllDesignations()",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "AllDepartments",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def AllDepartments():\n    response = depServices.AllDepartments()\n    return response\n@depRouter.get(\"/alldesignations\")\ndef AllDesignations():\n    response = depServices.AllDesignations()\n    return response\n@depRouter.post(\"/updatedepartment\")\ndef UpdateDepartment(request:UpdateDepartmentRequestModel):\n    response = depServices.UpdateDepartment(request)",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "AllDesignations",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def AllDesignations():\n    response = depServices.AllDesignations()\n    return response\n@depRouter.post(\"/updatedepartment\")\ndef UpdateDepartment(request:UpdateDepartmentRequestModel):\n    response = depServices.UpdateDepartment(request)\n    return response\n@depRouter.post(\"/updatedesignation\")\ndef UpdateDesignation(request:UpdateDesignationRequestModel):\n    response = depServices.UpdateDesignation(request)",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "UpdateDepartment",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def UpdateDepartment(request:UpdateDepartmentRequestModel):\n    response = depServices.UpdateDepartment(request)\n    return response\n@depRouter.post(\"/updatedesignation\")\ndef UpdateDesignation(request:UpdateDesignationRequestModel):\n    response = depServices.UpdateDesignation(request)\n    return response\n@depRouter.delete(\"/deletedepartment\")\ndef DeleteDepartment(request:DeleteDepartmentRequestModel):\n    response = depServices.DeleteDepartment(request)",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "UpdateDesignation",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def UpdateDesignation(request:UpdateDesignationRequestModel):\n    response = depServices.UpdateDesignation(request)\n    return response\n@depRouter.delete(\"/deletedepartment\")\ndef DeleteDepartment(request:DeleteDepartmentRequestModel):\n    response = depServices.DeleteDepartment(request)\n    return response\n@depRouter.delete(\"/deletedesignation\")\ndef DeleteDepartment(request:DeleteDesignationRequestModel):\n    response = depServices.DeleteDesignation(request)",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "DeleteDepartment",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def DeleteDepartment(request:DeleteDepartmentRequestModel):\n    response = depServices.DeleteDepartment(request)\n    return response\n@depRouter.delete(\"/deletedesignation\")\ndef DeleteDepartment(request:DeleteDesignationRequestModel):\n    response = depServices.DeleteDesignation(request)\n    return response",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "DeleteDepartment",
        "kind": 2,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "def DeleteDepartment(request:DeleteDesignationRequestModel):\n    response = depServices.DeleteDesignation(request)\n    return response",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "depRouter",
        "kind": 5,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "depRouter = APIRouter()\ndepServices = DepartmentServices()\n@depRouter.post(\"/adddepartment\")\ndef AddDepartment(request:AddDepartmentRequestModel):\n    response=  depServices.AddDepartment(request)\n    return response\n@depRouter.post(\"/adddesignation\")\ndef AddDesignation(request:AddDepartmentRequestModel):\n    response = depServices.AddDesgination(request)\n    return response",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "depServices",
        "kind": 5,
        "importPath": "controllers.DepartmentController",
        "description": "controllers.DepartmentController",
        "peekOfCode": "depServices = DepartmentServices()\n@depRouter.post(\"/adddepartment\")\ndef AddDepartment(request:AddDepartmentRequestModel):\n    response=  depServices.AddDepartment(request)\n    return response\n@depRouter.post(\"/adddesignation\")\ndef AddDesignation(request:AddDepartmentRequestModel):\n    response = depServices.AddDesgination(request)\n    return response\n@depRouter.get(\"/alldepartments\")",
        "detail": "controllers.DepartmentController",
        "documentation": {}
    },
    {
        "label": "AddEmployee",
        "kind": 2,
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "peekOfCode": "def AddEmployee(request:AddEmployeeRequestModel):\n    response = empServices.AddEmployee(request)\n    return response\n@empRouter.get(\"/allemployees\")\ndef AllEmpl():\n    response = empServices.AllEmpl()\n    return response\n@empRouter.post(\"/updateemployee\")\ndef UpdateEmployee(request:UpdateEmployeeRequestModel):\n    response = empServices.UpdateEmployee(request)",
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "AllEmpl",
        "kind": 2,
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "peekOfCode": "def AllEmpl():\n    response = empServices.AllEmpl()\n    return response\n@empRouter.post(\"/updateemployee\")\ndef UpdateEmployee(request:UpdateEmployeeRequestModel):\n    response = empServices.UpdateEmployee(request)\n    return response\n@empRouter.post(\"/findemployee\")\ndef FindEmployee(request:FindEmployeeRequestModel):\n    response = empServices.FindEmployee(request)",
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "UpdateEmployee",
        "kind": 2,
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "peekOfCode": "def UpdateEmployee(request:UpdateEmployeeRequestModel):\n    response = empServices.UpdateEmployee(request)\n    return response\n@empRouter.post(\"/findemployee\")\ndef FindEmployee(request:FindEmployeeRequestModel):\n    response = empServices.FindEmployee(request)\n    return response\n@empRouter.delete(\"/deleteemployee\")\ndef DeletEmployee(request:DeleteEmployeeRequestModel):\n    response = empServices.DeleteEmployee(request)",
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "FindEmployee",
        "kind": 2,
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "peekOfCode": "def FindEmployee(request:FindEmployeeRequestModel):\n    response = empServices.FindEmployee(request)\n    return response\n@empRouter.delete(\"/deleteemployee\")\ndef DeletEmployee(request:DeleteEmployeeRequestModel):\n    response = empServices.DeleteEmployee(request)\n    return response",
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "DeletEmployee",
        "kind": 2,
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "peekOfCode": "def DeletEmployee(request:DeleteEmployeeRequestModel):\n    response = empServices.DeleteEmployee(request)\n    return response",
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "empRouter",
        "kind": 5,
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "peekOfCode": "empRouter = APIRouter()\nempServices = EmployeeServices()\n@empRouter.post(\"/addemployee\")\ndef AddEmployee(request:AddEmployeeRequestModel):\n    response = empServices.AddEmployee(request)\n    return response\n@empRouter.get(\"/allemployees\")\ndef AllEmpl():\n    response = empServices.AllEmpl()\n    return response",
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "empServices",
        "kind": 5,
        "importPath": "controllers.EmployeeController",
        "description": "controllers.EmployeeController",
        "peekOfCode": "empServices = EmployeeServices()\n@empRouter.post(\"/addemployee\")\ndef AddEmployee(request:AddEmployeeRequestModel):\n    response = empServices.AddEmployee(request)\n    return response\n@empRouter.get(\"/allemployees\")\ndef AllEmpl():\n    response = empServices.AllEmpl()\n    return response\n@empRouter.post(\"/updateemployee\")",
        "detail": "controllers.EmployeeController",
        "documentation": {}
    },
    {
        "label": "AddUser",
        "kind": 2,
        "importPath": "controllers.UserController",
        "description": "controllers.UserController",
        "peekOfCode": "def AddUser(request:AddUserRequestModel):\n    response = userServices.AddUser(request)\n    return response\n@userRouter.post(\"/getuser\")\ndef FindOneUser(request:FindOneuserRequestModel):\n    response = userServices.FindOneUser(request)\n    return response",
        "detail": "controllers.UserController",
        "documentation": {}
    },
    {
        "label": "FindOneUser",
        "kind": 2,
        "importPath": "controllers.UserController",
        "description": "controllers.UserController",
        "peekOfCode": "def FindOneUser(request:FindOneuserRequestModel):\n    response = userServices.FindOneUser(request)\n    return response",
        "detail": "controllers.UserController",
        "documentation": {}
    },
    {
        "label": "userRouter",
        "kind": 5,
        "importPath": "controllers.UserController",
        "description": "controllers.UserController",
        "peekOfCode": "userRouter = APIRouter()\nuserServices = UserServices()\n@userRouter.post(\"/createuser\")\ndef AddUser(request:AddUserRequestModel):\n    response = userServices.AddUser(request)\n    return response\n@userRouter.post(\"/getuser\")\ndef FindOneUser(request:FindOneuserRequestModel):\n    response = userServices.FindOneUser(request)\n    return response",
        "detail": "controllers.UserController",
        "documentation": {}
    },
    {
        "label": "userServices",
        "kind": 5,
        "importPath": "controllers.UserController",
        "description": "controllers.UserController",
        "peekOfCode": "userServices = UserServices()\n@userRouter.post(\"/createuser\")\ndef AddUser(request:AddUserRequestModel):\n    response = userServices.AddUser(request)\n    return response\n@userRouter.post(\"/getuser\")\ndef FindOneUser(request:FindOneuserRequestModel):\n    response = userServices.FindOneUser(request)\n    return response",
        "detail": "controllers.UserController",
        "documentation": {}
    },
    {
        "label": "cluster",
        "kind": 5,
        "importPath": "db.MongoDb",
        "description": "db.MongoDb",
        "peekOfCode": "cluster = MongoClient(\"mongodb://localhost:27017/\")\nEmployeeMgmtDB = cluster.EmployeeMgmt",
        "detail": "db.MongoDb",
        "documentation": {}
    },
    {
        "label": "EmployeeMgmtDB",
        "kind": 5,
        "importPath": "db.MongoDb",
        "description": "db.MongoDb",
        "peekOfCode": "EmployeeMgmtDB = cluster.EmployeeMgmt",
        "detail": "db.MongoDb",
        "documentation": {}
    },
    {
        "label": "DespartmentDbModel",
        "kind": 6,
        "importPath": "models.dbmodels.DepartmentDbModel",
        "description": "models.dbmodels.DepartmentDbModel",
        "peekOfCode": "class DespartmentDbModel(BaseModel):\n    id:str\n    departmentName:str",
        "detail": "models.dbmodels.DepartmentDbModel",
        "documentation": {}
    },
    {
        "label": "DesignatioNDbModel",
        "kind": 6,
        "importPath": "models.dbmodels.DesignationDBModel",
        "description": "models.dbmodels.DesignationDBModel",
        "peekOfCode": "class DesignatioNDbModel(BaseModel):\n    id:str\n    designationName:str",
        "detail": "models.dbmodels.DesignationDBModel",
        "documentation": {}
    },
    {
        "label": "EmployeeDesingationEnum",
        "kind": 6,
        "importPath": "models.dbmodels.EmployeeDBModel",
        "description": "models.dbmodels.EmployeeDBModel",
        "peekOfCode": "class EmployeeDesingationEnum(Enum):\n    HR = \"HR\"\n    EMPLOYEE = \"EMPLOYEE\"\n    ADMIN = \"ADMIN\"\n    MANAGER = \"MANAGER\"\nclass EmployeeDbModel(BaseModel):\n    firstName: str\n    lastName: str\n    emailId: str\n    mobileNumber: str",
        "detail": "models.dbmodels.EmployeeDBModel",
        "documentation": {}
    },
    {
        "label": "EmployeeDbModel",
        "kind": 6,
        "importPath": "models.dbmodels.EmployeeDBModel",
        "description": "models.dbmodels.EmployeeDBModel",
        "peekOfCode": "class EmployeeDbModel(BaseModel):\n    firstName: str\n    lastName: str\n    emailId: str\n    mobileNumber: str\n    employeeId: str\n    employeeMentType: EmployeeDesingationEnum\n    isPresent: bool\n    id: str\n    designationId: str",
        "detail": "models.dbmodels.EmployeeDBModel",
        "documentation": {}
    },
    {
        "label": "UserDBModel",
        "kind": 6,
        "importPath": "models.dbmodels.UserDbModel",
        "description": "models.dbmodels.UserDbModel",
        "peekOfCode": "class UserDBModel(BaseModel):\n    employeeId:str\n    password:str\n    loggedIn:bool",
        "detail": "models.dbmodels.UserDbModel",
        "documentation": {}
    },
    {
        "label": "AddDepartmentRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "peekOfCode": "class AddDepartmentRequestModel(BaseModel):\n    name: str\nclass AddDesignationRequestModel(BaseModel):\n    name:str\nclass UpdateDepartmentRequestModel(BaseModel):\n    id :str\n    departmentName:str\nclass UpdateDesignationRequestModel(BaseModel):\n    id :str\n    designationName:str",
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "AddDesignationRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "peekOfCode": "class AddDesignationRequestModel(BaseModel):\n    name:str\nclass UpdateDepartmentRequestModel(BaseModel):\n    id :str\n    departmentName:str\nclass UpdateDesignationRequestModel(BaseModel):\n    id :str\n    designationName:str\nclass DeleteDepartmentRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateDepartmentRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "peekOfCode": "class UpdateDepartmentRequestModel(BaseModel):\n    id :str\n    departmentName:str\nclass UpdateDesignationRequestModel(BaseModel):\n    id :str\n    designationName:str\nclass DeleteDepartmentRequestModel(BaseModel):\n    id:str\nclass DeleteDesignationRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateDesignationRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "peekOfCode": "class UpdateDesignationRequestModel(BaseModel):\n    id :str\n    designationName:str\nclass DeleteDepartmentRequestModel(BaseModel):\n    id:str\nclass DeleteDesignationRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteDepartmentRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "peekOfCode": "class DeleteDepartmentRequestModel(BaseModel):\n    id:str\nclass DeleteDesignationRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteDesignationRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.DepartmentRequestModel",
        "description": "models.requestmodels.DepartmentRequestModel",
        "peekOfCode": "class DeleteDesignationRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.DepartmentRequestModel",
        "documentation": {}
    },
    {
        "label": "AddEmployeeRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "peekOfCode": "class AddEmployeeRequestModel(BaseModel):\n    firstName:str\n    lastName:str\n    emailId:str\n    mobileNumber:str\n    employeeId:str\n    employeeMentType: str\n    isPresent:bool = False\n    designationId:str\n    departmentId:str",
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "UpdateEmployeeRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "peekOfCode": "class UpdateEmployeeRequestModel(BaseModel):\n    id:str\n    firstName:str\nclass FindEmployeeRequestModel(BaseModel):\n    id:str\nclass DeleteEmployeeRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "FindEmployeeRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "peekOfCode": "class FindEmployeeRequestModel(BaseModel):\n    id:str\nclass DeleteEmployeeRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "DeleteEmployeeRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.EmployeeRequestModel",
        "description": "models.requestmodels.EmployeeRequestModel",
        "peekOfCode": "class DeleteEmployeeRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.EmployeeRequestModel",
        "documentation": {}
    },
    {
        "label": "AddUserRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.UserRequestModel",
        "description": "models.requestmodels.UserRequestModel",
        "peekOfCode": "class AddUserRequestModel(BaseModel):\n    employeeId:str\n    password:str\n    reenterPassword:str\n    loggedIn:bool = False\nclass FindOneuserRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.UserRequestModel",
        "documentation": {}
    },
    {
        "label": "FindOneuserRequestModel",
        "kind": 6,
        "importPath": "models.requestmodels.UserRequestModel",
        "description": "models.requestmodels.UserRequestModel",
        "peekOfCode": "class FindOneuserRequestModel(BaseModel):\n    id:str",
        "detail": "models.requestmodels.UserRequestModel",
        "documentation": {}
    },
    {
        "label": "DepartmentServices",
        "kind": 6,
        "importPath": "services.DepartmentServices",
        "description": "services.DepartmentServices",
        "peekOfCode": "class DepartmentServices:\n    def AddDepartment(self, request: AddDepartmentRequestModel):\n        depCollection = EmployeeMgmtDB.departments\n        depTempObj = {\"id\": generateRandomId(), \"departmentName\": request.name}\n        data = depCollection.insert_one(document=depTempObj)\n        if data.inserted_id != 0:\n            return {\"data\": \"SUCESS\"}\n        else:\n            return {\"data\": \"ERROR\"}\n    def AddDesgination(self, request: AddDepartmentRequestModel):",
        "detail": "services.DepartmentServices",
        "documentation": {}
    },
    {
        "label": "EmployeeServices",
        "kind": 6,
        "importPath": "services.EmployeeServices",
        "description": "services.EmployeeServices",
        "peekOfCode": "class EmployeeServices:\n    def AddEmployee(self, request: AddEmployeeRequestModel):\n        addEmpTempObj = {\n            \"firstName\": request.firstName,\n            \"lastName\": request.lastName,\n            \"mobileNumber\": request.mobileNumber,\n            \"emailId\": request.emailId,\n            \"isPresent\": request.isPresent,\n            \"designationId\": request.designationId,\n            \"departmentId\": request.departmentId,",
        "detail": "services.EmployeeServices",
        "documentation": {}
    },
    {
        "label": "UserServices",
        "kind": 6,
        "importPath": "services.UserServices",
        "description": "services.UserServices",
        "peekOfCode": "class UserServices:\n    def AddUser(self, request: AddUserRequestModel):\n      if request.password != request.reenterPassword:\n        return {\"data\":\"PASSWORD DO NOT MATCHED\"}\n      empCollection = EmployeeMgmtDB.employees\n      empData = empCollection.find_one({\"employeeId\": request.employeeId})\n      if empData == None:\n            return {\"data\": \"NO EMPLOYEE FOUND\"}\n      if empData.get(\"employeeMentType\") != \"EMPLOYEE\":\n              userTempObj = {",
        "detail": "services.UserServices",
        "documentation": {}
    },
    {
        "label": "generateRandomId",
        "kind": 2,
        "importPath": "utils.AppUtils",
        "description": "utils.AppUtils",
        "peekOfCode": "def generateRandomId():\n    return str(uuid.uuid4())",
        "detail": "utils.AppUtils",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  \n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\napp.include_router(router=depRouter, prefix=\"/dep\")\napp.include_router(router=empRouter, prefix=\"/emp\")",
        "detail": "main",
        "documentation": {}
    }
]